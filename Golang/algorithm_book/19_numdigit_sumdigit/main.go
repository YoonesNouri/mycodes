package main

import (
	"fmt"
)

var n, numdigit, sumdigit int
var digits []int

func splitInt(n int) []int {
	digits := []int{}
	for n > 0 {
		digits = append([]int{n % 10}, digits...)
		n = n / 10
		//in each iteration of loop n is divided by 10 to extract other digits in
		// a multidigit number which has ones , tens , hundreds , thousands... etc.
		//در هر تکرارِ لوپ، اِن بر 10 تقسیم می شود تا ارقام دیگرِ یک عدد چند رقمی که دارای
		//یکان، دهگان، صدگان، هزارگان و ... هست را استخراج کند
		// برای اینکه رقمهای استخراج شده از کوچک به بزرگ در اسلایس خالی تعبیه شود یک حرکتی زدم
		//اَپِند یا تعبیه روی عدد 123 : وقتی یکان رو استخراج میکنه تعبیه میکنم تو اسلایس دیجیتس
		//الان اسلایس دیجیتس مون فقط یه دونه یکان داره که 3 هست، حالا اِن رو تقسیم بر 10 میکنم
		//تا عددمون 2 رقمی یعنی 12 میشه که دهگان عدد اصلیمون که 3 رقمی بود بیاد بشه یکان عدد 2 رقمی مون
		//حالا بازم اِن جدید رو که 2 رقمی هست باقیمانده ی تقسیمش بر 10 رو بدست میارم
		//که عدد 2 هست، حالا اسلایس دیجیتس که فقط یک عدد 3 داره رو آنفرل کردیم یعنی بازش کردیم که عدد رو
		//خارج از اسلایس به صورت جدا در بیاره و این 3 رو که داخل اسلایس دیجیتس بود به اون 2 ای که تازه
		//از باقیمانده تقسیم بر 10 بدست آوردیم اضافه میکنیم که میشه یک 3 در سمت راست و یک 2 در سمت چپ
		//حالا هر دوی این 3 و 2 را در اسلایس دیجیتس دوباره تعبیه میکنیم
		//برای دور آخر هم 12 رو تقسیم بر 10 میکنیم که میشه 1(باقیمانده نیست، خارج قسمت است، دقت شود)
		//باقیمانده ی تقسیم 1 بر 10 همان 1 میشود که داخل اسلایس قرار میگیرد و 3 و 2 که از قبل داخل اسلایس دیجیتس تعبیه شده بود
		//رو به اسلایسی که داخلش 1 هست اضافه میکنم و همه را باهم به اسلایس دیجیتس اختصاص میدهم که میشود 3 و 2 و 1
		//یعنی ترتیب از کوچک به بزرگ از چپ به راست
		//digits = append([]int{1}, 2, 3). Now digits becomes [1, 2, 3]مرحله آخر
		//بعدشم دیگه اِن مون 0 میشه چون خارج قسمت تقسیم 1 بر 10 میشه 0 چون اعداد صحیح یا همان اینت است، نه اعداد اعشاری یا همان فلوت64
	}
	return digits
}

func main() {
	fmt.Print("Enter number: ")
	fmt.Scanln(&n)

	digits = splitInt(n)
	numdigit = len(digits)

	sumdigit := 0
	for _, v := range digits {
		sumdigit += v
	}

	fmt.Printf("Digits of %v: %v\n", n, digits)
	fmt.Printf("Number of digits: %d\n", numdigit)
	fmt.Printf("Sum of digits: %d\n", sumdigit)
}
