//اُپراتور ampersand که & می¬باشد ، اگر قبل از یک متغیر بیاید آدرس ذخیره آن داده را میدهد.
//عبارت fmt.Println(&a) آدرس a را میدهد.
//اگر آدرس تایپ آنرا بخواهیم از دستور fmt.Println(“%T”,&a) استفاده میکنیم که در قسمت output ِ کد *int را  نشان میدهد که دیگر تایپ اینت(int) نیست
//بلکه تایپ پوینتر/اشاره¬گر به اینت (pointer to an int=*int) است و * جزئی از تایپ است که اشاره میکند به آدرسی که a (که تایپش اینت است) در آنجا ذخیره شده.
//اگر*  astrisk  ستاره را در قسمت بدنه کد بذاریم  یک عملگر  operator است dereference میکند یعنی آدرس معکوس میدهد و مقدار value ِ آن آدرس را پرینت میکند.
//yoones ویدیو 132 Pointers (ص56 جزوه)
package main

import "fmt"

func main() {
	a := 14
	fmt.Println(a)
	// اُپراتور اَپِرسَند که & میباشد ، اگر قبل از متغیر بیاید آدرس ذخیره آن داده را میدهد
	fmt.Println(&a)
	// ستاره اگر در قسمت بدنه کد باشد، عدم ارجاع یا آدرس معکوس است که ولیوی آدرس را پرینت میکند
	fmt.Println(*&a)

	// بی را مساوی آدرس آ قرار دادیم نه خودِ آ، دقت شود
	b := &a
	fmt.Println(b)
	fmt.Println(&b)
	// ستاره اگر در قسمت بدنه کد باشد، عدم ارجاع یا آدرس معکوس است که ولیوی آدرس را پرینت میکند
	fmt.Println(*b)

	*b = 5
	fmt.Println(a)
}
