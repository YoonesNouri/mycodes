//نکته: هر بار یک فانکشن را call میکنیم باید داخل پرانتزش در اینجا foo()یک استدلال یا برهان یا آرگومان argument باشد، حتی اگر نباشد باید پرانتز خالی را بگذاریم.
//وقتی کال میکنیم میرود داخل کد را میگردد و هر جا که فانکشنش هست را پیدا میکند و اجرا میکند و برمیگردد انتهای همان عبارتی که کال شده... ترتیب و توالی خوانش کد توسط کامپیوتر منظور است.
//تمام مواردی که کال میشود داخل گیومه¬ی func main است و گیومه¬ی آن بسته میشود و سپس سراغ نوشتن فانکشن های  مربوطه اش میرویم.
//یعنی  در واقع در func main بصورت خلاصه است در خارج آن به صورت مبسوط و مشروح. که هدف فانکشن که تکه تکه شدن کد است محقق میشود.
//نکته: ضرورت ندارد که حتمن بصورت جدا داخل گیومه¬ی func main کال شود، بلکه میتوان داخل پرانتزِ fmt.Println() آنرا کال کنیم که همزمان پرینتش هم بکنیم.
//برای کال کافی است اسم فانکشن مثلا foo همراه با یک پرانتز در جلویش باشد foo() حالا هر جا باشد باز هم کال میشود. که آن پرانتز درواقع دستور اجرا شدن فانکشن است.
// Yoones veriadic parameter ویددیو 110 (ص50 جزوه)
package main

import "fmt"

func main() {
	fa(1, 2, 3, 4, 5)
}
func fa(x ...int) { // ... = unlimited number of values
	fmt.Println(x)
	fmt.Printf("%T\n", x)
}

//چون ... سه نقطه گذاشتیم و چندین مقدار از int را وارد کردیم ، برنامه[کامپایلر=compiler] خودبخود تایپِ آن را []int اسلایسِ اینت تشخیص میدهد.
